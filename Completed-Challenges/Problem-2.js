//Problem Statement:
//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

//Preliminary Ideas:
//Start with an array containing the first two 'seed' values [1,2], set up a loop that iterates over the array, summing the vals of the
//last two index positions and then pushing that sum for each iteration. This builds an array with the fibonacci sequence.
//Also start with a variable containing the sum of the even values. var will start at 2.
//Each time the loop iterates, add the push value to the variable if it is even

let fibSequence = [1,2];
let nextVal;
let fibSum = 2;

fibSequence.forEach( function() {
  while (fibSequence[fibSequence.length - 1] < 3999999 ) {
  nextVal = fibSequence[fibSequence.length - 1] + fibSequence[fibSequence.length - 2];
  fibSequence.push(nextVal);
    if (nextVal%2 === 0) {
    fibSum += nextVal;
    }
  }
});

console.log(fibSequence);
console.log(fibSum);

//It worked! The correct answer is 4613732
