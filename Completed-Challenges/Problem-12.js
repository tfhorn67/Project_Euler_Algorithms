// User: thorn67    pass: wouldn't you like to know!
//Problem Statement . . .
/*
    The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

    Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
    We can see that 28 is the first triangle number to have over five divisors.

    What is the value of the first triangle number to have over five hundred divisors?
*/

//start with a way to generate triangle numbers.
let counter = 1;
let triangleInt = 0;
let indicator = false;

while (indicator === false) {
    //advance to next triangle number
    triangleInt += counter;
    //increment
    counter++;
    //count the factors
    let divisorCount = countFactors(triangleInt);
    //switch indicator when satisfied
    divisorCount >= 501 ? indicator = true : indicator = false;
}

//can't figure out if we have the right number if we can't find and count its factors
function countFactors(product) {
    let factorCount = 0;
    for ( let i = 1 ; i <= Math.sqrt(product) ; i++ ) {
        if ( product%i === 0) {
            factorCount += 2;
        }
    }
    return factorCount;
}

console.log(triangleInt);
